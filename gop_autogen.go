// Code generated by gop (Go+); DO NOT EDIT.

package main

import "github.com/goplus/spx"

const _ = true

type Bird struct {
	spx.SpriteImpl
	*Game
}
type Dinosaur struct {
	spx.SpriteImpl
	*Game
	isJump bool
	isDown bool
}
type GameStart struct {
	spx.SpriteImpl
	*Game
	count int
}
type LargeTree struct {
	spx.SpriteImpl
	*Game
}
type Road struct {
	spx.SpriteImpl
	*Game
	road_req  int
	setFinish bool
}
type SmallTree struct {
	spx.SpriteImpl
	*Game
}
type Game struct {
	spx.Game
	GameStart  GameStart
	Dinosaur   Dinosaur
	SmallTree  SmallTree
	LargeTree  LargeTree
	Bird       Bird
	Road       Road
	score      int
	highScore  int
	isFinish   bool
	isWordInit bool
	speed      float64
}
//line main.spx:15
func (this *Game) MainEntry() {
//line main.spx:15:1
	this.isFinish = true
}
func (this *Game) Main() {
	spx.Gopt_Game_Main(this, new(Bird), new(Dinosaur), new(GameStart), new(LargeTree), new(Road), new(SmallTree))
}
//line Bird.spx:1
func (this *Bird) Main() {
//line Bird.spx:1:1
	this.OnCloned__1(func() {
//line Bird.spx:2:1
		this.SetXYpos(400+spx.Rand__0(-50, 50), spx.Rand__0(0, 40)-7)
//line Bird.spx:3:1
		this.Show()
//line Bird.spx:4:1
		count := 0
//line Bird.spx:5:1
		wave := 0
//line Bird.spx:6:1
		for {
			spx.Sched()
//line Bird.spx:7:1
			if this.isFinish {
//line Bird.spx:8:1
				this.Wait(0.01)
//line Bird.spx:9:1
				continue
			}
//line Bird.spx:12:1
			count++
//line Bird.spx:13:1
			if count%20 == 0 {
//line Bird.spx:14:1
				wave = (wave + 1) % 2
//line Bird.spx:15:1
				this.SetCostume__2(wave)
			}
//line Bird.spx:18:1
			this.ChangeXpos(-1 * this.speed)
//line Bird.spx:19:1
			if this.Xpos() < -400 {
//line Bird.spx:20:1
				this.Hide()
//line Bird.spx:21:1
				this.Destroy()
//line Bird.spx:22:1
				return
			}
//line Bird.spx:25:1
			if this.Touching__0("Dinosaur") {
//line Bird.spx:26:1
				this.Broadcast__0("finish")
//line Bird.spx:27:1
				for
//line Bird.spx:27:1
				i := 0; i < 8;
//line Bird.spx:27:1
				i++ {
					spx.Sched()
//line Bird.spx:28:1
					this.ChangeXpos(-1)
//line Bird.spx:29:1
					this.Wait(0.01)
				}
//line Bird.spx:31:1
				return
			}
//line Bird.spx:33:1
			this.Wait(0.01)
		}
	})
//line Bird.spx:37:1
	this.OnMsg__1("bird", func() {
//line Bird.spx:38:1
		if this.Xpos() == 1000 {
//line Bird.spx:39:1
			this.SetCostume__1(spx.Rand__0(0, 1))
//line Bird.spx:40:1
			spx.Gopt_SpriteImpl_Clone__0(this)
		}
	})
//line Bird.spx:44:1
	this.OnMsg__1("start", func() {
//line Bird.spx:45:1
		this.Hide()
//line Bird.spx:46:1
		this.DeleteThisClone()
	})
}
func (this *Bird) Classfname() string {
	return "Bird"
}
//line Dinosaur.spx:6
func (this *Dinosaur) Main() {
//line Dinosaur.spx:6:1
	this.OnClick(func() {
//line Dinosaur.spx:7:1
		if this.isJump {
//line Dinosaur.spx:8:1
			return
		}
//line Dinosaur.spx:10:1
		this.isJump = true
//line Dinosaur.spx:11:1
		defer func() {
//line Dinosaur.spx:12:1
			this.isJump = false
		}()
//line Dinosaur.spx:15:1
		speed := 5.0
//line Dinosaur.spx:16:1
		g := 0.1
//line Dinosaur.spx:17:1
		for
//line Dinosaur.spx:17:1
		i := 1; i <= 100;
//line Dinosaur.spx:17:1
		i++ {
			spx.Sched()
//line Dinosaur.spx:18:1
			s := speed*float64(i) - g/2*float64(i)*float64(i)
//line Dinosaur.spx:19:1
			if this.isFinish {
//line Dinosaur.spx:20:1
				return
			}
//line Dinosaur.spx:23:1
			if s < 0 {
//line Dinosaur.spx:24:1
				return
			}
//line Dinosaur.spx:26:1
			this.SetYpos(s)
//line Dinosaur.spx:27:1
			this.Wait(0.01)
		}
	})
//line Dinosaur.spx:31:1
	this.OnKey__0(spx.KeySpace, func() {
//line Dinosaur.spx:32:1
		if this.isJump || this.isDown {
//line Dinosaur.spx:33:1
			return
		}
//line Dinosaur.spx:36:1
		this.isJump = true
//line Dinosaur.spx:37:1
		defer func() {
//line Dinosaur.spx:38:1
			this.isJump = false
		}()
//line Dinosaur.spx:41:1
		speed := 5.0
//line Dinosaur.spx:42:1
		g := 0.1
//line Dinosaur.spx:43:1
		for
//line Dinosaur.spx:43:1
		i := 1; i <= 100;
//line Dinosaur.spx:43:1
		i++ {
			spx.Sched()
//line Dinosaur.spx:44:1
			s := speed*float64(i) - g/2*float64(i)*float64(i)
//line Dinosaur.spx:45:1
			if this.isFinish {
//line Dinosaur.spx:46:1
				return
			}
//line Dinosaur.spx:49:1
			if s < 0 {
//line Dinosaur.spx:50:1
				return
			}
//line Dinosaur.spx:53:1
			this.SetYpos(s)
//line Dinosaur.spx:54:1
			this.Wait(0.01)
		}
	})
//line Dinosaur.spx:58:1
	this.OnKey__0(spx.KeyDown, func() {
//line Dinosaur.spx:59:1
		if this.isJump || this.isDown {
//line Dinosaur.spx:60:1
			return
		}
//line Dinosaur.spx:63:1
		this.isDown = true
//line Dinosaur.spx:64:1
		this.Wait(0.05)
//line Dinosaur.spx:65:1
		this.SetCostume__1(4)
//line Dinosaur.spx:66:1
		this.isDown = false
	})
//line Dinosaur.spx:69:1
	this.OnMsg__1("start", func() {
//line Dinosaur.spx:70:1
		this.Show()
//line Dinosaur.spx:71:1
		count := 0
//line Dinosaur.spx:72:1
		countDown := 0
//line Dinosaur.spx:73:1
		for {
			spx.Sched()
//line Dinosaur.spx:74:1
			this.Wait(0.05)
//line Dinosaur.spx:75:1
			if this.isJump {
//line Dinosaur.spx:76:1
				continue
			}
//line Dinosaur.spx:79:1
			if this.isFinish {
//line Dinosaur.spx:80:1
				break
			}
//line Dinosaur.spx:83:1
			if this.isDown {
//line Dinosaur.spx:84:1
				continue
			}
//line Dinosaur.spx:87:1
			if this.KeyPressed(spx.KeyDown) {
//line Dinosaur.spx:88:1
				this.isDown = true
//line Dinosaur.spx:89:1
				countDown = (countDown + 1) % 2
//line Dinosaur.spx:90:1
				this.SetCostume__2(countDown + 4)
//line Dinosaur.spx:91:1
				this.isDown = false
//line Dinosaur.spx:92:1
				continue
			}
//line Dinosaur.spx:95:1
			count = (count + 1) % 4
//line Dinosaur.spx:96:1
			this.SetCostume__2(count)
		}
	})
//line Dinosaur.spx:100:1
	this.OnMsg__1("finish", func() {
//line Dinosaur.spx:101:1
		this.SetCostume__1(6)
	})
}
func (this *Dinosaur) Classfname() string {
	return "Dinosaur"
}
//line GameStart.spx:5
func (this *GameStart) Main() {
//line GameStart.spx:5:1
	this.OnClick(func() {
//line GameStart.spx:6:1
		this.Hide()
//line GameStart.spx:7:1
		this.isFinish = false
//line GameStart.spx:8:1
		this.Broadcast__0("start")
	})
//line GameStart.spx:11:1
	this.OnKey__0(spx.KeySpace, func() {
//line GameStart.spx:12:1
		if this.isFinish {
//line GameStart.spx:13:1
			this.Hide()
//line GameStart.spx:14:1
			this.isFinish = false
//line GameStart.spx:15:1
			this.Broadcast__0("start")
		}
	})
//line GameStart.spx:19:1
	this.OnMsg__1("start", func() {
//line GameStart.spx:20:1
		this.speed = 1.5
//line GameStart.spx:21:1
		this.score = 0
//line GameStart.spx:22:1
		total := 0.0
//line GameStart.spx:23:1
		for {
			spx.Sched()
//line GameStart.spx:24:1
			if this.isFinish {
//line GameStart.spx:25:1
				break
			}
//line GameStart.spx:28:1
			if this.count%30 == 0 {
//line GameStart.spx:29:1
				obstacle := spx.Rand__0(0, 2)
//line GameStart.spx:30:1
				switch obstacle {
//line GameStart.spx:31:1
				case 0:
//line GameStart.spx:32:1
					this.Broadcast__0("smallTree")
//line GameStart.spx:33:1
				case 1:
//line GameStart.spx:34:1
					this.Broadcast__0("largeTree")
//line GameStart.spx:35:1
				case 2:
//line GameStart.spx:36:1
					this.Broadcast__0("bird")
				}
			}
//line GameStart.spx:40:1
			this.count++
//line GameStart.spx:41:1
			total = total + this.speed
//line GameStart.spx:42:1
			this.score = int(total)
//line GameStart.spx:43:1
			if this.score%100 == 0 && this.speed < 2 {
//line GameStart.spx:44:1
				this.speed += 0.1
			}
//line GameStart.spx:47:1
			if this.score%500 == 0 && this.speed < 4 {
//line GameStart.spx:48:1
				this.speed += 0.1
			}
//line GameStart.spx:51:1
			this.Wait(0.1)
		}
	})
//line GameStart.spx:55:1
	this.OnMsg__1("finish", func() {
//line GameStart.spx:56:1
		this.Wait(0.10)
//line GameStart.spx:57:1
		this.Show()
//line GameStart.spx:58:1
		this.isFinish = true
//line GameStart.spx:59:1
		if this.highScore < this.score {
//line GameStart.spx:60:1
			this.highScore = this.score
		}
	})
}
func (this *GameStart) Classfname() string {
	return "GameStart"
}
//line LargeTree.spx:1
func (this *LargeTree) Main() {
//line LargeTree.spx:1:1
	this.OnCloned__1(func() {
//line LargeTree.spx:2:1
		this.SetXYpos(400, -5)
//line LargeTree.spx:3:1
		this.Show()
//line LargeTree.spx:4:1
		for {
			spx.Sched()
//line LargeTree.spx:5:1
			if this.isFinish {
//line LargeTree.spx:6:1
				this.Wait(0.01)
//line LargeTree.spx:7:1
				continue
			}
//line LargeTree.spx:10:1
			this.ChangeXpos(-1 * this.speed)
//line LargeTree.spx:11:1
			if this.Xpos() < -400 {
//line LargeTree.spx:12:1
				this.Hide()
//line LargeTree.spx:13:1
				this.Destroy()
//line LargeTree.spx:14:1
				return
			}
//line LargeTree.spx:17:1
			if this.Touching__0("Dinosaur") {
//line LargeTree.spx:18:1
				this.Broadcast__0("finish")
//line LargeTree.spx:19:1
				for
//line LargeTree.spx:19:1
				i := 0; i < 5;
//line LargeTree.spx:19:1
				i++ {
					spx.Sched()
//line LargeTree.spx:20:1
					this.ChangeXpos(-1)
//line LargeTree.spx:21:1
					this.Wait(0.01)
				}
//line LargeTree.spx:23:1
				return
			}
//line LargeTree.spx:25:1
			this.Wait(0.01)
		}
	})
//line LargeTree.spx:30:1
	this.OnMsg__1("largeTree", func() {
//line LargeTree.spx:31:1
		if this.Xpos() == 1000 {
//line LargeTree.spx:32:1
			waitTime := spx.Rand__0(0, 50) / 100
//line LargeTree.spx:33:1
			this.Wait(waitTime)
//line LargeTree.spx:35:1
			seq := spx.Rand__0(0, 4)
//line LargeTree.spx:36:1
			this.SetCostume__1(seq)
//line LargeTree.spx:37:1
			spx.Gopt_SpriteImpl_Clone__0(this)
//line LargeTree.spx:39:1
			if seq != 0 && this.score > 300 {
//line LargeTree.spx:40:1
				nums := int(spx.Rand__0(0, 1))
//line LargeTree.spx:41:1
				for
//line LargeTree.spx:41:1
				i := 0; i < nums;
//line LargeTree.spx:41:1
				i++ {
					spx.Sched()
//line LargeTree.spx:42:1
					seq = spx.Rand__0(1, 4)
//line LargeTree.spx:43:1
					this.SetCostume__1(seq)
//line LargeTree.spx:44:1
					this.Wait(0.30)
//line LargeTree.spx:45:1
					spx.Gopt_SpriteImpl_Clone__0(this)
				}
			}
		}
	})
//line LargeTree.spx:51:1
	this.OnMsg__1("start", func() {
//line LargeTree.spx:52:1
		this.Hide()
//line LargeTree.spx:53:1
		this.DeleteThisClone()
	})
}
func (this *LargeTree) Classfname() string {
	return "LargeTree"
}
//line Road.spx:6
func (this *Road) Main() {
//line Road.spx:6:1
	this.OnMsg__1("start", func() {
//line Road.spx:7:1
		this.setFinish = false
//line Road.spx:8:1
		if this.isWordInit {
//line Road.spx:9:1
			return
		}
//line Road.spx:12:1
		this.isWordInit = true
//line Road.spx:13:1
		for {
			spx.Sched()
//line Road.spx:14:1
			if this.road_req >= 5 {
//line Road.spx:15:1
				break
			}
//line Road.spx:18:1
			this.SetCostume__2(this.road_req)
//line Road.spx:19:1
			spx.Gopt_SpriteImpl_Clone__0(this)
//line Road.spx:20:1
			this.road_req++
		}
	})
//line Road.spx:24:1
	this.OnCloned__1(func() {
//line Road.spx:25:1
		this.SetXYpos(float64(200*this.road_req)-400, -30)
//line Road.spx:26:1
		this.Show()
//line Road.spx:27:1
		for {
			spx.Sched()
//line Road.spx:28:1
			if this.isFinish && this.setFinish {
//line Road.spx:29:1
				this.Wait(0.01)
//line Road.spx:30:1
				continue
			}
//line Road.spx:33:1
			if this.isFinish {
//line Road.spx:34:1
				for
//line Road.spx:34:1
				i := 0; i < 8;
//line Road.spx:34:1
				i++ {
					spx.Sched()
//line Road.spx:35:1
					this.ChangeXpos(-1)
//line Road.spx:36:1
					this.Wait(0.01)
				}
//line Road.spx:38:1
				this.setFinish = true
			}
//line Road.spx:41:1
			this.ChangeXpos(-1 * this.speed)
//line Road.spx:42:1
			if this.Xpos() < -400 {
//line Road.spx:43:1
				this.SetXpos(800)
			}
//line Road.spx:46:1
			this.Wait(0.01)
		}
	})
}
func (this *Road) Classfname() string {
	return "Road"
}
//line SmallTree.spx:1
func (this *SmallTree) Main() {
//line SmallTree.spx:1:1
	this.OnCloned__1(func() {
//line SmallTree.spx:2:1
		this.SetXYpos(400, -17)
//line SmallTree.spx:3:1
		this.Show()
//line SmallTree.spx:4:1
		for {
			spx.Sched()
//line SmallTree.spx:5:1
			if this.isFinish {
//line SmallTree.spx:6:1
				this.Wait(0.01)
//line SmallTree.spx:7:1
				continue
			}
//line SmallTree.spx:10:1
			this.ChangeXpos(-1 * this.speed)
//line SmallTree.spx:11:1
			if this.Xpos() < -400 {
//line SmallTree.spx:12:1
				this.Hide()
//line SmallTree.spx:13:1
				this.Destroy()
//line SmallTree.spx:14:1
				return
			}
//line SmallTree.spx:17:1
			if this.Touching__0("Dinosaur") {
//line SmallTree.spx:18:1
				this.Broadcast__0("finish")
//line SmallTree.spx:19:1
				for
//line SmallTree.spx:19:1
				i := 0; i < 8;
//line SmallTree.spx:19:1
				i++ {
					spx.Sched()
//line SmallTree.spx:20:1
					this.ChangeXpos(-1)
//line SmallTree.spx:21:1
					this.Wait(0.01)
				}
//line SmallTree.spx:23:1
				return
			}
//line SmallTree.spx:25:1
			this.Wait(0.01)
		}
	})
//line SmallTree.spx:29:1
	this.OnMsg__1("smallTree", func() {
//line SmallTree.spx:30:1
		if this.Xpos() == 1000 {
//line SmallTree.spx:31:1
			waitTime := spx.Rand__0(0, 100) / 100
//line SmallTree.spx:32:1
			this.Wait(waitTime)
//line SmallTree.spx:34:1
			seq := spx.Rand__0(0, 5)
//line SmallTree.spx:35:1
			this.SetCostume__1(seq)
//line SmallTree.spx:36:1
			spx.Gopt_SpriteImpl_Clone__0(this)
//line SmallTree.spx:38:1
			if this.score > 300 {
//line SmallTree.spx:39:1
				nums := int(spx.Rand__0(0, 1))
//line SmallTree.spx:40:1
				for
//line SmallTree.spx:40:1
				i := 0; i < nums;
//line SmallTree.spx:40:1
				i++ {
					spx.Sched()
//line SmallTree.spx:41:1
					seq = spx.Rand__0(0, 5)
//line SmallTree.spx:42:1
					this.SetCostume__1(seq)
//line SmallTree.spx:43:1
					this.Wait(0.2)
//line SmallTree.spx:44:1
					spx.Gopt_SpriteImpl_Clone__0(this)
				}
			}
		}
	})
//line SmallTree.spx:50:1
	this.OnMsg__1("start", func() {
//line SmallTree.spx:51:1
		this.Hide()
//line SmallTree.spx:52:1
		this.DeleteThisClone()
//line SmallTree.spx:53:1
		return
	})
}
func (this *SmallTree) Classfname() string {
	return "SmallTree"
}
func main() {
	new(Game).Main()
}
